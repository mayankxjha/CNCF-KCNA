apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-app
  labels:
    app.kubernetes.io/name: go-app
    # app.kubernetes.io/instance: go-app-abcxyz
    # app.kubernetes.io/version: "5.7.21"
    # app.kubernetes.io/component: database
    # app.kubernetes.io/part-of: wordpress
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: go-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: go-app
    spec:
      containers:
      - name: go-app
        image: nyanner/golang-app-image:local.4
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: vars-for-app
        - secretRef:
            name: secret-basic-auth 
        volumeMounts:
        - name: config
          mountPath: "/config"
          readOnly: true
        - name: foo
          mountPath: "/etc/foo"
          readOnly: true
        - mountPath: "/tmp/pv-data"
          name: pv-mounteddata
      volumes:
      # You set volumes at the Pod level, then mount them into containers inside that Pod
      - name: config
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: vars-for-app
          # An array of keys from the ConfigMap to create as files
          items:
          - key: "game.properties"
            path: "game.properties"
          - key: "user-interface.properties"
            path: "user-interface.properties"
      - name: foo
        secret:
          secretName: secret-basic-auth
          optional: true
      - name: pv-mounteddata
        persistentVolumeClaim:
          claimName: app-pvc
